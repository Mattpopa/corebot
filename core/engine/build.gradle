buildscript {
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$version_kotlin"
        classpath "org.junit.platform:junit-platform-gradle-plugin:$version_junit_platform_gradle"
    }
}

apply plugin: 'kotlin'
apply plugin: 'org.junit.platform.gradle.plugin'

junitPlatform {
    platformVersion version_junit_platform_gradle
    filters {
        engines {
            include 'spek'
        }
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$version_kotlin"
    compile "org.jetbrains.kotlin:kotlin-reflect:$version_kotlin"

    compile "org.apache.logging.log4j:log4j-api:$version_log4j"

    compile "com.fasterxml.jackson.module:jackson-module-kotlin:$version_jackson"
    compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$version_jackson"

    compile "com.google.guava:guava:$version_guava"
    compile "com.google.inject:guice:$version_guice"

    compile project(':core:core-api')

    testCompile "org.amshove.kluent:kluent:$version_kluent"
    testCompile "org.jetbrains.spek:spek-api:$version_spek"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:$version_spek"
    testRuntime "org.junit.platform:junit-platform-launcher:$version_junit_platform_gradle"
    testCompile "com.nhaarman:mockito-kotlin-kt1.1:$version_mockito_kotlin"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar

            repositories {
                maven {
                    url mavenSnapshotRepository
                    credentials(AwsCredentials) {
                        accessKey awsAccessKey
                        secretKey awsSecretKey
                    }
                }
            }
        }
    }
}
